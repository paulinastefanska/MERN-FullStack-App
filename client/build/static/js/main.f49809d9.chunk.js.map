{"version":3,"sources":["components/layout/PageContainer/PageContainer.js","components/common/Logo/Logo.js","components/layout/MainMenu/MainMenu.js","components/features/NavBar/NavBar.js","components/layout/MainLayout/MainLayout.js","components/common/PageTitle/PageTitle.js","config.js","redux/postsRedux.js","components/common/Button/Button.js","components/common/SmallTitle/SmallTitle.js","components/common/HtmlBox/HtmlBox.js","components/features/PostSummary/PostSummary.js","utils/cutText/cutText.js","components/features/PostsList/PostsList.js","components/common/Spinner/Spinner.js","components/common/Alert/Alert.js","components/common/Pagination/Pagination.js","components/features/Posts/Posts.js","components/features/Posts/PostsContainer.js","components/pages/Home/HomePage.js","components/features/PostsCounter/PostsCounter.js","components/features/PostsCounter/PostsCounterContainer.js","components/pages/Posts/PostsPage.js","components/pages/Contact/ContactPage.js","components/pages/NotFound/NotFoundPage.js","components/common/TextField/TextField.js","components/common/SectionTitle/SectionTitle.js","components/features/PostForm/PostForm.js","components/features/PostForm/PostFormContainer.js","components/pages/AddPost/AddPostPage.js","components/features/SinglePost/SinglePost.js","components/features/SinglePost/SinglePostContainer.js","components/pages/SinglePost/SinglePostPage.js","App.js","redux/store.js","index.js"],"names":["PageContainer","children","className","Logo","links","location","MainMenu","map","link","index","key","pathname","path","to","title","withRouter","props","NavBar","state","this","React","Component","MainLayout","PageTitle","BASE_URL","createActionName","name","getRequest","posts","request","getPages","Math","ceil","amount","postsPerPage","LOAD_POSTS","LOAD_SINGLE_POST","START_REQUEST","END_REQUEST","ERROR_REQUEST","RESET_REQUEST","LOAD_POSTS_PAGE","startRequest","type","endRequest","errorRequest","error","resetRequest","loadPostsByPage","payload","initialState","data","pending","success","singlePost","presentPage","Button","variant","otherProps","SmallTitle","HtmlBox","ReactHtmlParser","PostSummary","id","content","author","maxLength","length","substr","lastIndexOf","cutText","PostsList","post","Spinner","animationIn","animationOut","Alert","icon","Pagination","initialPage","changePage","newPage","onPageChange","setState","prevPage","nextPage","pages","onClick","Array","el","page","Posts","loadPostsPage","pagination","undefined","defaultProps","connect","dispatch","a","startAt","limit","axios","get","res","message","loadPostsByPageRequest","HomePage","PostsCounter","counter","PostsPage","ContactPage","NotFoundPage","TextField","value","label","onChange","SectionTitle","PostForm","handleChange","e","target","handleEditor","text","addPost","preventDefault","onSubmit","options","placeholder","toolbar","buttons","addPostRequest","AddPostPage","SinglePost","loadPost","match","params","Fragment","appId","href","loadSinglePostRequest","SinglePostPage","App","exact","component","Home","Contact","AddPost","NotFound","rootReducer","combineReducers","statePart","action","store","createStore","compose","applyMiddleware","thunk","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f49809d9.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PageContainer.scss';\n\nconst PageContainer = ({ children }) => (\n  <div className=\"container-fluid\">\n    {children}\n  </div>\n);\n\nPageContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default PageContainer;\n","import React from 'react'\r\n\r\nimport './Logo.scss';\r\n\r\nconst Logo = ({ links, location }) => (\r\n  <h1 className=\"logo\">Blog.app</h1>\r\n);\r\n\r\nexport default Logo;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport { withRouter } from 'react-router-dom';\r\nimport './MainMenu.scss';\r\n\r\nconst MainMenu = ({ links, location }) => (\r\n  <ul className=\"main-menu\">\r\n    { links.map((link, index) =>\r\n      <li key={index}>\r\n        <Link className={(location.pathname === link.path && 'active') || ''} to={link.path}>{link.title}</Link>\r\n      </li>\r\n    )}\r\n  </ul>\r\n);\r\n\r\nMainMenu.propTypes = {\r\n  links: PropTypes.arrayOf(PropTypes.shape({\r\n    path: PropTypes.string.isRequired,\r\n    title: PropTypes.string.isRequired,\r\n  })),\r\n};\r\n\r\nexport default withRouter(props => <MainMenu {...props}/>);\r\n","import React from 'react';\r\nimport Logo from '../../common/Logo/Logo';\r\nimport MainMenu from '../../layout/MainMenu/MainMenu';\r\nimport './NavBar.scss'\r\n\r\nclass NavBar extends React.Component {\r\n\r\n  state = {\r\n    links: [\r\n      { path: '/', title: 'Home' },\r\n      { path: '/posts/new', title: 'Add post' },\r\n      { path: '/posts', title: 'Posts' },\r\n      { path: '/contact', title: 'Contact' },\r\n    ],\r\n  };\r\n\r\n  render() {\r\n    const { links } = this.state;\r\n\r\n    return (\r\n      <nav className=\"navbar\">\r\n        <Logo />\r\n        <MainMenu links={links} />\r\n      </nav>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport PageContainer from '../PageContainer/PageContainer';\r\nimport NavBar from '../../features/NavBar/NavBar';\r\n\r\nconst MainLayout = ({ children }) => (\r\n  <div>\r\n    <PageContainer>\r\n      <NavBar />\r\n      {children}\r\n    </PageContainer>\r\n  </div>\r\n);\r\n\r\nexport default MainLayout;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport './PageTitle.scss';\n\nconst PageTitle = ({ children }) => (\n  <h1 className=\"page-title\">\n     {children}\n  </h1>\n);\n\nPageTitle.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default PageTitle;\n","export const API_URL = '/api';\r\nexport const BASE_URL = 'https://fullstack-app-blog.herokuapp.com';","import axios from 'axios';\r\nimport { API_URL } from '../config';\r\nimport { BASE_URL } from '../config';\r\n\r\n// action name creator\r\nconst reducerName = 'posts';\r\nconst createActionName = name => `app/${reducerName}/${name}`;\r\n\r\n/* SELECTORS */\r\n\r\nexport const getPosts = ({ posts }) => posts.data;\r\nexport const getPostsCounter = ({ posts }) => posts.data.length;\r\nexport const getRequest = ({ posts }) => posts.request;\r\nexport const getSinglePost = ({ posts }) => posts.singlePost;\r\nexport const getPages = ({ posts }) => Math.ceil(posts.amount / posts.postsPerPage);\r\nexport const presentPage = ({ posts }) => posts.presentPage;\r\n\r\n/* ACTIONS */\r\n\r\nexport const LOAD_POSTS = createActionName('LOAD_POSTS');\r\nexport const LOAD_SINGLE_POST = createActionName('LOAD_SINGLE_POST');\r\nexport const START_REQUEST = createActionName('START_REQUEST');\r\nexport const END_REQUEST = createActionName('END_REQUEST');\r\nexport const ERROR_REQUEST = createActionName('ERROR_REQUEST');\r\nexport const RESET_REQUEST = createActionName('RESET_REQUEST');\r\nexport const LOAD_POSTS_PAGE = createActionName('LOAD_POSTS_PAGE');\r\n\r\nexport const loadPosts = payload => ({ payload, type: LOAD_POSTS });\r\nexport const loadSinglePost = payload => ({payload, type: LOAD_SINGLE_POST});\r\nexport const startRequest = () => ({ type: START_REQUEST });\r\nexport const endRequest = () => ({ type: END_REQUEST });\r\nexport const errorRequest = error => ({ error, type: ERROR_REQUEST });\r\nexport const resetRequest = () => ({type: RESET_REQUEST});\r\nexport const loadPostsByPage = payload => ({ payload, type: LOAD_POSTS_PAGE });\r\n\r\n/* INITIAL STATE */\r\n\r\nconst initialState = {\r\n  data: [],\r\n  request: {\r\n    pending: false,\r\n    error: null,\r\n    success: null,\r\n  },\r\n  singlePost: [],\r\n  amount: 0,\r\n  postsPerPage: 5,\r\n  presentPage: 1,\r\n};\r\n\r\n/* REDUCER */\r\n\r\nexport default function reducer(statePart = initialState, action = {}) {\r\n  switch (action.type) {\r\n  \tcase LOAD_POSTS:\r\n      return { ...statePart, data: action.payload };\r\n    case LOAD_SINGLE_POST:\r\n      return { ...statePart, singlePost: action.payload };\r\n    case START_REQUEST:\r\n      return { ...statePart, request: { pending: true, error: null, success: null } };\r\n    case END_REQUEST:\r\n      return { ...statePart, request: { pending: false, error: null, success: true } };\r\n    case ERROR_REQUEST:\r\n      return { ...statePart, request: { pending: false, error: action.error, success: false } };\r\n    case RESET_REQUEST:\r\n      return {...statePart, request: { pending: false, error: null, success: null } };\r\n    case LOAD_POSTS_PAGE:\r\n      return {\r\n        ...statePart,\r\n        postsPerPage: action.payload.postsPerPage,\r\n        presentPage: action.payload.presentPage,\r\n        amount: action.payload.amount,\r\n        data: [...action.payload.posts],\r\n      };\r\n    default:\r\n      return statePart;\r\n  }\r\n};\r\n\r\n/* THUNKS */\r\n\r\nexport const loadPostsRequest = () => {\r\n  return async dispatch => {\r\n    \r\n    dispatch(startRequest());\r\n    try {\r\n\r\n      let res = await axios.get(`${BASE_URL}${API_URL}/posts`);\r\n      dispatch(loadPosts(res.data));\r\n      dispatch(endRequest());\r\n\r\n    } catch(e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n\r\n  };\r\n};\r\n\r\nexport const loadSinglePostRequest = (id) => {\r\n  return async dispatch => {\r\n\r\n    dispatch(startRequest());\r\n    try {\r\n\r\n      let res = await axios.get(`${BASE_URL}${API_URL}/posts/${id}`);\r\n      dispatch(loadSinglePost(res.data));\r\n      dispatch(endRequest());\r\n\r\n    } catch (e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n\r\n  };\r\n};\r\n\r\nexport const addPostRequest = (post) => {\r\n  return async dispatch => {\r\n\r\n    dispatch(startRequest());\r\n    try {\r\n\r\n      const res = await axios.post(`${BASE_URL}${API_URL}/posts`, post);\r\n      dispatch(endRequest());\r\n\r\n    } catch(e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n\r\n  };\r\n};\r\n\r\nexport const loadPostsByPageRequest = (page, postsPerPage) => {\r\n  return async dispatch => {\r\n\r\n    dispatch(startRequest());\r\n    try {\r\n\r\n      const startAt = (page - 1) * postsPerPage;\r\n      const limit = postsPerPage;\r\n\r\n      let res = await axios.get(`${BASE_URL}${API_URL}/posts/range/${startAt}/${limit}`);\r\n\r\n      const payload = {\r\n        posts: res.data.posts,\r\n        amount: res.data.amount,\r\n        postsPerPage,\r\n        presentPage: page,\r\n      };\r\n\r\n      dispatch(loadPostsByPage(payload));\r\n      dispatch(endRequest());\r\n\r\n    } catch(e) {\r\n      dispatch(errorRequest(e.message));\r\n    }\r\n\r\n  };\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Button.scss';\r\n\r\nconst Button = ({ variant = '', children, ...otherProps }) => (\r\n  <button { ...otherProps } className={ `button button--${variant}`}>\r\n    { children }\r\n  </button>\r\n);\r\n\r\nButton.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './SmallTitle.scss';\n\nconst SmallTitle = ({ children, ...otherProps }) => (\n  <h2 {...otherProps} className=\"small-title\">\n    { children }\n  </h2>\n);\n\nSmallTitle.propTypes = {\n  children: PropTypes.string,\n};\n\nexport default SmallTitle;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport ReactHtmlParser from 'react-html-parser';\r\n\r\nconst HtmlBox = ({ children, ...otherProps }) => (\r\n  <p {...otherProps} className=\"html-box\">\r\n    {ReactHtmlParser(children)}\r\n  </p>\r\n);\r\n\r\nHtmlBox.propTypes = {\r\n  children: PropTypes.string,\r\n};\r\n\r\nexport default HtmlBox;","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport Button from '../../common/Button/Button';\r\nimport SmallTitle from '../../common/SmallTitle/SmallTitle';\r\nimport HtmlBox from '../../common/HtmlBox/HtmlBox';\r\nimport cutText from \"../../../utils/cutText/cutText\";\r\nimport './PostSummary.scss';\r\n\r\nconst PostSummary = ({ id, title, content, author }) => (\r\n  <article className=\"post-summary\">\r\n    <SmallTitle>{title}</SmallTitle>\r\n    <p>Author: {author}</p>\r\n    <HtmlBox>{cutText(content, 200)}</HtmlBox>\r\n    <Button variant=\"primary\">\r\n      <Link to={`/posts/${id}`}>Read more</Link>\r\n    </Button>\r\n  </article>\r\n);\r\n\r\nPostSummary.propTypes = {\r\n  id: PropTypes.string,\r\n  title: PropTypes.string,\r\n  content: PropTypes.string,\r\n  author: PropTypes.string,\r\n};\r\n\r\nexport default PostSummary; ","export default (content, maxLength) => {\r\n  if(content.length < 1) return 'Error';\r\n  if(content.length <= maxLength) return content;\r\n  return content.substr(0, content.lastIndexOf(' ', maxLength)) + '...';\r\n};","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n\r\nimport PostSummary from '../PostSummary/PostSummary';\r\n\r\nconst PostsList = ({ posts }) => (\r\n  <div>\r\n    <section className=\"posts-list\">\r\n      {posts.map(post => <PostSummary key={post.id} {...post} />)}\r\n    </section>\r\n  </div>\r\n);\r\n\r\nPostsList.propTypes = {\r\n  posts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      content: PropTypes.string.isRequired,\r\n      author: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport default PostsList;","import React from 'react';\nimport { Animated } from 'react-animated-css';\n\nimport './Spinner.scss';\n\nconst Spinner = () => (\n  <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\n    <div className=\"lds-ellipsis\">\n      <div></div>\n      <div></div>\n      <div></div>\n      <div></div>\n    </div>\n  </Animated>\n);\n\nexport default Spinner;\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Animated } from 'react-animated-css';\r\nimport { MdInfoOutline, MdDone, MdErrorOutline } from 'react-icons/md';\r\n\r\nimport './Alert.scss';\r\n\r\nconst Alert = ({ variant = '', children, ...otherProps }) => {\r\n\r\n  const icon = () => {\r\n    switch(variant) {\r\n      case 'info':\r\n        return <MdInfoOutline />\r\n      case 'success':\r\n        return <MdDone />\r\n      case 'warning':\r\n        return <MdErrorOutline />\r\n      case 'error':\r\n        return <MdErrorOutline />\r\n      default:\r\n        return <MdInfoOutline />\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Animated animationIn=\"fadeIn\" animationOut=\"fadeOut\">\r\n      <div {...otherProps} className={`alert alert--${variant}`}>\r\n        {icon()}\r\n        <span className=\"alert__desc\">{children}</span>\r\n      </div>\r\n    </Animated>\r\n  )\r\n\r\n};\r\n\r\nAlert.propTypes = {\r\n  variant: PropTypes.string.isRequired,\r\n  children: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Alert;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './Pagination.scss';\r\n\r\nclass Pagination extends React.Component {\r\n\r\n\tstate = {\r\n\t  presentPage: this.props.initialPage || 1\r\n\t}\r\n\r\n\tchangePage = (newPage) => {\r\n\t  const { onPageChange } = this.props;\r\n\r\n\t  this.setState({ presentPage: newPage });\r\n\t  onPageChange(newPage);\r\n\t}\r\n\r\n\tprevPage = () => {\r\n    const { presentPage } = this.state;\r\n    const { changePage } = this;\r\n    if (presentPage > 1 )\r\n    changePage(presentPage - 1)\r\n  };\r\n\r\n  nextPage = () => {\r\n  \tconst { pages } = this.props;\r\n    const { presentPage } = this.state;\r\n    const { changePage } = this;\r\n    if (presentPage < pages )\r\n    changePage(presentPage + 1)\r\n  };\r\n\r\n  render() {\r\n\r\n\t  const { pages } = this.props;\r\n\t  const { presentPage } = this.state;\r\n\t  const { changePage } = this;\r\n\r\n\t  return (\r\n\t    <div className=\"pagination\">\r\n\t      <ul className=\"pagination__list\">\r\n\t      \t{ presentPage > 1 ? (\r\n            <li\r\n              className={`pagination__list__item${(true) ? ' pagination__list__item--active' : '' }`}\r\n\t            onClick={this.prevPage}>\r\n\t            &lt;\r\n            </li>) : ''}\r\n\r\n\t        {[...Array(pages)].map((el, page) => (\r\n\t\t        <li\r\n\t\t            key={++page}\r\n\t\t            onClick={() => { changePage(page) }}\r\n\t\t            className={`pagination__list__item${((page) === presentPage) ? ' pagination__list__item--active' : ''}`}>\r\n\t\t            {page}\r\n\t\t        </li>\r\n\t        ))}\r\n\r\n\t        {presentPage === pages ?  '' : (\r\n            <li\r\n              className={`pagination__list__item${(true) ? ' pagination__list__item--active' : '' }`}\r\n              onClick={this.nextPage}>\r\n              &gt;\r\n          \t</li>)}\r\n\t      </ul>\r\n\t    </div>\r\n\t  );\r\n\t}\r\n\r\n}\r\n\r\nPagination.propTypes = {\r\n  pages: PropTypes.number.isRequired,\r\n  initialPage: PropTypes.number,\r\n  onPageChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Pagination;","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\n//import {resetRequest} from \"../../../redux/postsRedux\";\r\n\r\nimport PostsList from '../PostsList/PostsList';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\nimport Alert from '../../common/Alert/Alert';\r\nimport Pagination from '../../common/Pagination/Pagination';\r\n\r\nclass Posts extends React.Component {\r\n  \r\n  componentDidMount() {\r\n    const { loadPostsByPage, initialPage, postsPerPage } = this.props;\r\n    loadPostsByPage(initialPage, postsPerPage);\r\n  }\r\n\r\n  loadPostsPage = (page) => {\r\n    const { loadPostsByPage, postsPerPage } = this.props;\r\n    loadPostsByPage(page, postsPerPage);\r\n  }\r\n\r\n  render() {\r\n  \tconst { posts, request, pages, presentPage } = this.props;\r\n    const { loadPostsPage } = this;\r\n    let { pagination } = this.props;\r\n\r\n    if (pagination === undefined) {\r\n        pagination = true\r\n    }\r\n\r\n    if (request.pending === false && request.success === true && posts.length > 0) \r\n          return (\r\n            <div> \r\n              <PostsList posts={posts} />\r\n              { pagination && <Pagination pages={pages} onPageChange={loadPostsPage} initialPage={presentPage} /> }\r\n            </div>\r\n          );\r\n\r\n        else if (request.pending === true || request.success === null) \r\n          return <Spinner />\r\n\r\n        else if (request.pending === false && request.error !== null) \r\n          return <Alert variant=\"error\" children={request.error} />\r\n        \r\n        else if (request.pending === false && request.success === true && posts.length === 0) \r\n          return <Alert variant=\"info\" children=\"- no posts -\" />\r\n    }\r\n\r\n};\r\n\r\nPosts.propTypes = {\r\n  posts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      content: PropTypes.string.isRequired,\r\n      author: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  loadPostsByPage: PropTypes.func.isRequired,\r\n};\r\n\r\nPosts.defaultProps = {\r\n  initialPage: 1,\r\n  postsPerPage: 5,\r\n  pagination: true\r\n};\r\n\r\nexport default Posts;","import { connect } from 'react-redux';\r\nimport { getPosts, getRequest, loadPostsByPageRequest, getPages, presentPage } from '../../../redux/postsRedux';\r\nimport Posts from './Posts';\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: getPosts(state),\r\n  request: getRequest(state),\r\n  pages: getPages(state),\r\n  presentPage: presentPage(state),\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loadPostsByPage: (page, postsPerPage) => dispatch(loadPostsByPageRequest(page, postsPerPage)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Posts);","import React from 'react';\r\n\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport Posts from '../../features/Posts/PostsContainer';\r\n\r\nconst HomePage = () => (\r\n  <div>\r\n\t  <PageTitle>Blog</PageTitle>\r\n\t  <Posts postsPerPage={3} pagination={false} />\r\n\t</div>\r\n);\r\n\r\nexport default HomePage;","import React from 'react';\r\n\r\nclass PostsCounter extends React.Component {\r\n\r\n  render() {\r\n    const { counter } = this.props;\r\n\r\n    return (\r\n            <div>Posts loaded: { counter > 0 ? counter : ' 0 ' }</div>\r\n        );\r\n    }\r\n\r\n};\r\n\r\nexport default PostsCounter;","import { connect } from 'react-redux';\r\nimport { getPostsCounter } from '../../../redux/postsRedux';\r\nimport PostsCounter from './PostsCounter';\r\n\r\nconst mapStateToProps = state => ({\r\n  counter: getPostsCounter(state)\r\n});\r\n\r\nexport default connect(mapStateToProps)(PostsCounter);","import React from 'react';\r\n\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport PostsCounter from '../../features/PostsCounter/PostsCounterContainer';\r\nimport Posts from '../../features/Posts/PostsContainer';\r\n\r\nconst PostsPage = () => (\r\n  <div>\r\n    <PageTitle>Posts list</PageTitle>\r\n    <PostsCounter />\r\n    <Posts />\r\n  </div>\r\n);\r\n\r\nexport default PostsPage;","import React from 'react';\r\n\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\n\r\nconst ContactPage = () => (\r\n  <div>\r\n\t  <PageTitle>Contact</PageTitle>\r\n\t  <p><b>Your Favourite Blooger Ltd.</b></p>\r\n\t\t<p><i>9432 Division Street</i></p>\r\n\t\t<p><i>Stone Mountain, GA 30083</i></p>\r\n\t\t<p><b>Mobile Number: 207-914-3411</b></p>\r\n\t</div>\r\n);\r\n\r\nexport default ContactPage;","import React from 'react';\r\n\r\nconst NotFoundPage = () => (\r\n  <div>\r\n    <h1>404 Not Found</h1>\r\n  </div>\r\n);\r\n\r\nexport default NotFoundPage;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './TextField.scss';\r\n\r\nconst TextField = ({ value, label, onChange, ...otherProps }) => (\r\n  <label className=\"text-field\">\r\n    <span className={`text-field__label ${(!value.length > 0) ? 'text-field__label--big' : ''}`}>{label}</span>\r\n    <input {...otherProps} value={value} onChange={onChange} className=\"text-field__input\" />\r\n  </label>\r\n);\r\n\r\nTextField.propTypes = {\r\n  value: PropTypes.string.isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default TextField;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './SectionTitle.scss';\r\n\r\nconst SectionTitle = ({ children }) => (\r\n  <h2 className=\"section-title\">\r\n     {children}\r\n  </h2>\r\n);\r\n\r\nSectionTitle.propTypes = {\r\n  children: PropTypes.string,\r\n};\r\n\r\nexport default SectionTitle;\r\n","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport {resetRequest} from \"../../../redux/postsRedux\";\r\nimport Editor from 'react-medium-editor';\r\nimport 'medium-editor/dist/css/medium-editor.css';\r\nimport 'medium-editor/dist/css/themes/default.css';\r\nimport './PostForm.scss';\r\n\r\nimport TextField from '../../common/TextField/TextField';\r\nimport SectionTitle from '../../common/SectionTitle/SectionTitle';\r\nimport Button from '../../common/Button/Button';\r\nimport Alert from '../../common/Alert/Alert';\r\nimport Spinner from '../../common/Spinner/Spinner';\r\n\r\nimport './PostForm.scss';\r\n\r\nclass PostForm extends React.Component {\r\n\r\n  state = {\r\n    post: {\r\n      title: '',\r\n      author: '',\r\n      content: ''\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { resetRequest } = this.props;\r\n    resetRequest();\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    const { post } = this.state;\r\n    this.setState({ post: { ...post, [e.target.name]: e.target.value }});\r\n  }\r\n\r\n  handleEditor = (text) => {\r\n    const { post } = this.state;\r\n    this.setState({ post: { ...post, content: text }});\r\n  }\r\n\r\n  addPost = (e) => {\r\n    const { addPost } = this.props;\r\n    const { post } = this.state;\r\n\r\n    e.preventDefault();\r\n    addPost(post);\r\n    resetRequest();\r\n  }\r\n\r\n  render() {\r\n\r\n    const { post } = this.state;\r\n    const { handleChange, handleEditor, addPost } = this;\r\n    const { request } = this.props;\r\n\r\n    if(request.error) return <Alert variant=\"error\">{request.error}</Alert>\r\n    else if(request.success) return <Alert variant=\"success\">Post has been added!</Alert>\r\n    else if(request.pending) return <Spinner />\r\n    else return (\r\n      <form onSubmit={addPost}>\r\n\r\n        <TextField\r\n          label=\"Title\"\r\n          value={post.title}\r\n          onChange={handleChange}\r\n          name=\"title\"\r\n        />\r\n\r\n        <TextField\r\n          label=\"Author\"\r\n          value={post.author}\r\n          onChange={handleChange}\r\n          name=\"author\"\r\n        />\r\n\r\n        <SectionTitle>Edit post content</SectionTitle>\r\n\r\n        <Editor\r\n          className=\"content-editor\"\r\n          text={post.content}\r\n          onChange={handleEditor}\r\n          options={{ placeholder: false, toolbar: { buttons: ['bold', 'italic', 'underline', 'anchor', 'h2', 'h3'] } }}\r\n        />\r\n\r\n        <Button variant=\"primary\">Add post</Button>\r\n\r\n    </form>\r\n    );\r\n  }\r\n};\r\n\r\nPostForm.propTypes = {\r\n  request: PropTypes.object.isRequired,\r\n  addPost: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default PostForm;","import { connect } from 'react-redux';\r\nimport { getRequest, addPostRequest, resetRequest } from '../../../redux/postsRedux';\r\nimport PostForm from './PostForm';\r\n\r\nconst mapStateToProps = state => ({\r\n  request: getRequest(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  addPost: (post) => dispatch(addPostRequest(post)),\r\n  resetRequest: () => dispatch(resetRequest()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(PostForm);","import React from 'react';\r\n\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\nimport PostForm from '../../features/PostForm/PostFormContainer';\r\n\r\nconst AddPostPage = () => (\r\n  <div>\r\n    <PageTitle>Add post</PageTitle>\r\n    <PostForm />\r\n  </div>\r\n);\r\n\r\nexport default AddPostPage;","import React from 'react';\r\nimport { PropTypes } from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { BASE_URL } from '../../../config'\r\nimport { FacebookProvider, Comments, ShareButton } from 'react-facebook';\r\nimport './SinglePost.scss';\r\n\r\nimport Spinner from '../../common/Spinner/Spinner';\r\nimport Alert from \"../../common/Alert/Alert\";\r\nimport HtmlBox from '../../common/HtmlBox/HtmlBox';\r\nimport PageTitle from '../../common/PageTitle/PageTitle';\r\n\r\nclass SinglePost extends React.Component {\r\n  \r\n  componentDidMount() {\r\n    const { loadPost, resetRequest, match } = this.props;\r\n    loadPost(match.params.id);\r\n    resetRequest();\r\n\r\n  }\r\n\r\n  render() {\r\n  \tconst { posts, request } = this.props;\r\n    const { location } = this.props;\r\n\r\n    if (request.pending === false && request.success === true && posts.length > 0) \r\n          return (\r\n          \t<React.Fragment>\r\n              <PageTitle>{ posts[0].title }</PageTitle>\r\n              <FacebookProvider appId=\"965381443794607\">\r\n                <ShareButton className=\"FbButton\" href={`${BASE_URL}/${location.pathname}`}>\r\n                  Share on Facebook\r\n                </ShareButton>\r\n              </FacebookProvider>\r\n              <p>Author: { posts[0].author }</p>\r\n              <HtmlBox>{ posts[0].content }</HtmlBox>\r\n              <FacebookProvider appId=\"965381443794607\">\r\n                <Comments href={`${BASE_URL}/${location.pathname}`} />\r\n              </FacebookProvider>\r\n            </React.Fragment>\r\n          );  \r\n\r\n        else if (request.pending === true || request.success === null) \r\n          return <Spinner />\r\n\r\n        else if (request.pending === false && request.error !== null) \r\n          return <Alert variant=\"error\" children={request.error} />\r\n        \r\n        else if (request.pending === false && request.success === true && posts.length === 0) \r\n          return <Alert variant=\"info\" children=\"- no posts -\" />\r\n    }\r\n\r\n};\r\n\r\nSinglePost.propTypes = {\r\n  posts: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      title: PropTypes.string.isRequired,\r\n      content: PropTypes.string.isRequired,\r\n      author: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  loadPost: PropTypes.func.isRequired,\r\n  resetRequest: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default withRouter(props => <SinglePost {...props}/>);","import { connect } from 'react-redux';\r\nimport { getRequest, loadSinglePostRequest, getSinglePost, resetRequest } from '../../../redux/postsRedux';\r\nimport SinglePost from './SinglePost';\r\n\r\nconst mapStateToProps = state => ({\r\n  posts: getSinglePost(state),\r\n  request: getRequest(state),\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loadPost: (id) => dispatch(loadSinglePostRequest(id)),\r\n  resetRequest: () => dispatch(resetRequest()),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SinglePost);","import React from 'react';\r\n\r\nimport SinglePost from \"../../features/SinglePost/SinglePostContainer\";\r\n\r\nconst SinglePostPage = () => (\r\n    <div>\r\n      <SinglePost />\r\n    </div>\r\n);\r\n\r\nexport default SinglePostPage;","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\n\nimport MainLayout from './components/layout/MainLayout/MainLayout';\n\n// import routes\nimport Home from './components/pages/Home/HomePage';\nimport Posts from './components/pages/Posts/PostsPage';\nimport Contact from './components/pages/Contact/ContactPage';\nimport NotFound from './components/pages/NotFound/NotFoundPage';\nimport AddPost from './components/pages/AddPost/AddPostPage';\nimport SinglePost from './components/pages/SinglePost/SinglePostPage';\n\nclass App extends React.Component {\n\n  render() {\n    return (\n      <MainLayout>\n        <Switch>\n          <Route path=\"/\" exact component={Home} />\n          <Route path=\"/posts\" exact component={Posts} />\n          <Route path=\"/contact\" exact component={Contact} />\n          <Route path=\"/posts/new\" exact component={AddPost} />\n          <Route path=\"/posts/:id\" exact component={SinglePost} />\n          <Route component={NotFound} />\n        </Switch>\n      </MainLayout>\n    );\n  }\n\n};\n\nexport default App;","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\n// import reducers\r\nimport posts from './postsRedux';\r\n\r\n// combine reducers\r\nconst rootReducer = combineReducers({\r\n  posts,\r\n});\r\n\r\n// create store\r\nconst store = createStore(\r\n  rootReducer,\r\n  compose(\r\n\t\tapplyMiddleware(thunk)\r\n\t)\r\n);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './styles/global.scss';\nimport 'animate.css/animate.min.css';\nimport { BrowserRouter as Router } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\n\nconst Root = () => (\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>\n);\n\nReactDOM.render(<Root />, document.getElementById('root'));\n"],"sourceRoot":""}